<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Core Development Reference on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop.com/1.7/development/</link>
    <description>Recent content in Core Development Reference on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://devdocs.prestashop.com/1.7/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Register a new hook</title>
      <link>https://devdocs.prestashop.com/1.7/development/register-new-hook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/register-new-hook/</guid>
      <description>How to register a new Hook in PrestaShop This is basically three steps:
 dispatch the hook in the code (in templates or PHP classes/files); update the hooks xml definition of Installer; update the hooks table for &amp;ldquo;Auto Upgrade&amp;rdquo; system;  Dispatching hooks Most of the time, you will dispatch the hook using an instance of HookDispatcher. It can be retrieved from the service container and/or injected, as it&amp;rsquo;s done for example in Form Handlers:</description>
    </item>
    
    <item>
      <title>How to compile assets</title>
      <link>https://devdocs.prestashop.com/1.7/development/compile-assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/compile-assets/</guid>
      <description>How to compile assets Some components in PrestaShop, like Javascript or SCSS files, need to be compiled to be usable.
Requirements We use Webpack to compile assets. You only need NodeJS from 8.x to 12.x (get it here), NPM will take care of it all.
Assets that need to be compiled  Back Office  Default theme  SASS files
Located in admin-dev/themes/default/sass   New theme  SCSS files</description>
    </item>
    
    <item>
      <title>How to send e-mails</title>
      <link>https://devdocs.prestashop.com/1.7/development/mail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop.com/1.7/development/mail/</guid>
      <description>How to send e-mails Using the Mail::send() method The Mail core class extends ObjectModel This example is assuming you are using in a controller named mycontroller of a module named mymodule &amp;lt;?php class mymodulemycontrollerModuleFrontController extends ModuleFrontController { public function initContent() { parent::initContent(); Mail::Send( (int)(Configuration::get(&amp;#39;PS_LANG_DEFAULT&amp;#39;)), // defaut language id  &amp;#39;contact&amp;#39;, // email template file to be use  &amp;#39; Module Installation&amp;#39;, // email subject  array( &amp;#39;{email}&amp;#39; =&amp;gt; Configuration::get(&amp;#39;PS_SHOP_EMAIL&amp;#39;), // sender email address  &amp;#39;{message}&amp;#39; =&amp;gt; &amp;#39;Hello world&amp;#39; // email content  ), Configuration::get(&amp;#39;PS_SHOP_EMAIL&amp;#39;), // receiver email address  NULL, //receiver name  NULL, //from email address  NULL //from name  ); } }  Prestashop will use the Shop Configuration to decide if use smtp connection or php mail function so check it out on backoffice or in app/config/parameter.</description>
    </item>
    
  </channel>
</rss>